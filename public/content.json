{"pages":[],"posts":[{"title":"命令行入门","text":"命令行常用命令1.单词 英文 翻译 缩写命令 英文 翻译 缩写命令 file 文件 / link 链接 / mark 制作 mk find 找到 / move 动 mv echo 回声 echo remove 删除 rm touch 触摸 touch copy 复制 cp change 改变 cd中的c lies 列表 ls directory 目录/文件夹 cd中的d 2.命令中的增删改查增：创建文件 创建文件touch xxx.txtecho hi &gt; xxx.txt 会覆盖之前xxx.txt内的内容echo hihi &gt;&gt; xxx.txt 追加‘hihi’到xxx.txt 创建目录mkdir amarkdir -p a/b/c 同时创建多个文件touch 1.txt 2.txt 复制文件cp 1.txt 2.txt 2.txt处也可以跟路径，意思是把1.txt 复制到某个目录下，命命名为2.txt 复制目录cp -r a b 删：删除文件 删除文件rm xxx.txt 删除目录/文件夹rm -rf xxx -rf的意思是强制递归方式删除目录 查：查看文件或目录 查看当前目录的绝对路径pwd 查看当前目录的内容lsls -a 可以查看隐藏的文件和文件的属性 查看指定目录的内容ls 路径 查看文件内容cat 路径 全部查看head 路径 查看前10行 跟参数-n 可以指定查看前n行，默认是10行tail 路径 查看后10行 跟参数-n 可以指定查看后n行 ，默认是10行less 路径 可以让查看的窗口变成滚动的 可以以下命令来安装gtldr，来查询命令的常用参数 12npm i -g tldryarn global add tldr 资料来源：饥人谷!!","link":"/2020/09/20/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%A5%E9%97%A8/"},{"title":"git的基本操作和Github","text":"git的基本操作配置本地的git 123456git config --global user.name你的英文名git config --global user.emai1你的邮箱git config --globa1 push default simplegit config --global core. quotepath falsegit config --global coreeditor code --waitgit config --globa1 core. autocrif input 1.初始化本地仓库 1git init 操作完以后，本地会多出一个.git的目录，里面会记录各个版本的变化，如下图所示。2.把需要变动的内容提交到暂存区 12git add 路径 //提交某个路径下的文件git add . //把当前目录的所有文件提交到暂存区 3.描述哪些文件不提交 12touch .gitignorevi .gitignore .gitignore文件是描述哪些文件不会被提交到暂存区。把不需要提交的文件名写到.gitignore里面，就不会被提交。 4.把暂存区的文件提交到.git目录 12git commit -m 字符串 //提交并说明理由，字符串里面如果有空格，就要用引号包起来git commit -v //会弹出对话框，告诉你这次提交变更了什么 5.查看git的版本号 12git log 查看当前版本号之前历史版本git reflog 查看所有git的历史版本 6.回到之前的版本 1git reset --head xxxxxx 以上的xxxxxx代表版本号，可以通过git log 和 git reflog 来查看，需要回退的版本。 7.创建分支 1git branch xxx 创建一个分支，并命名为xxx 8.删除分支 1git branch -d xxx 删除分支xxx 9.切换分支 1git checkout xxx 切换分支到xxx ，默认的分支名是master 10.将一个分支合并到当前分支 1git merge xxx 将xxx分支合并到当前分支 git远程仓库GitHub GItHub就是用来备份本地 .git 而已，没有什么高科技原理。 1.生成ssh key 1ssh-keygen -t rsa -b 4096 -C 'your Email' 连续点3个回车，就可以下载到本地目录了 1cat ~/.ssh/id_rsa.pub 得到公钥内容，复制到Github个人设置里面就可以了 2.Github上创建一个远程仓库github个人主页创建仓库描述仓库的名称，并且生成仓库 3.把本地目录上传到远程仓库 1git remote add origin git@xxxxxxx origin 是远程仓库的默认名字，可以换，但是建议不要换git@xxxxxx 是远程仓库的地址 1git push -u origin master 第一次推送需要写全，以后写git push就可以了，这段代码的意思是推送本地master分支到远程仓库origin的master分支。如果提示git pull 就git pull。提示git pull是因为本地代码与远程仓库有不同，所以git pull就是让本地和远程仓库保持一致。 4.上传其他分支到github 1git push origin x:x 提交分支x到远程仓库origin的x分支 12git checkout xgit push -u origin x 先切换到x分支，然后在x分支推送到远程仓库 5.下载远程仓库的代码 123git clone git@?/xxx.git //会在当前目录创建一个xxx目录git clone git@?/xxx.git yyy ///会在本地新建yyy目录git clone git@?/xxx.git . //不会新建目录，会在当前目录来装代码和.git 第三种方法最后当前目录是一个空目录，不然容易覆盖之前的.git，很危险。 6.git通灵术 12git stash 文件 //把某个文件临时藏起来git stash pop 文件 //把某个文件释放出来 资料参考:饥人谷","link":"/2020/09/21/git%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%92%8CGithub/"},{"title":"HTML的历史和学习方法","text":"HTML历史WWW = URL + HTTP + HTMLWWW 就是万维网 World Wide Web 中文直翻就是「像世界一样大的网」URL 就是一个网址HTTP 一种传输的协议HTML 超文本编辑语言，这里可以理解成网页以上三样东西组成了WWW万维网 万维网和互联网是有区别的,互联网出现在万维网之前，互联网就是ip和ip是可以互联的，可以就行数据互通，比如可以发送邮件和文件。而万维网是我知道ip，在浏览器输入ip就可以打开我要看到网页，可以说万维网是基于互联网发明出来的。 HTML的学习方法HTML全称HtyperText Markup Language 超文本编辑语言狭义的HTML5指，新增的100多个标签及功能广义的HTML5指，HTML5和它的朋友们（包括CSS3等） 体系化学习1.学习一门语言必须学会什么 语法（代码怎么写） 如何调试（怎么知道自己的代码写错了） 在哪里查资料（其实就是为了抄代码）推荐MDN 标准制定者是谁 HTML的标准制定者是W3C 2.如何学(CRM学习法) Copy 抄代码，抄老师 Run 放在自己的机器上运行成功 Modify 加一点自己的想法，然后重新运行成 资料来源：饥人谷","link":"/2020/09/21/HTML%E7%9A%84%E5%8E%86%E5%8F%B2%E5%92%8C%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"},{"title":"Markdown的一些语法","text":"字体加粗1__内容__ 插入入图片1![图片的描述](图片的地址) 这样插入的图片，无法控制大小，和位置（默认都是靠左） 插入控制大小和位置的图片 1&lt;div align=&quot;center&quot;&gt;&lt;img src = &quot;图片地址&quot; width = 50%&gt;&lt;/div&gt; markdown里面居然还可以写HTML，惊了… 给文字加入超链接 1[文字]( url ) 表格 123|标题1|标题2|标题3|标题4||----|----|----|----||内容1|内容2|内容3|内容4| 文字字体颜色大小 1&lt;font color=&quot;red&quot; face=&quot;微软雅黑&quot; size=7&gt;我是字体&lt;/font&gt;","link":"/2020/09/21/Markdown%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AF%AD%E6%B3%95/"},{"title":"HTML标签","text":"英语小课堂 英文 翻译 英文 翻译 heading 标题 body 身体，正文 paragraph 段落 section 章节 article 一篇文章 main 主要 aside 旁边的 anchor 锚点，定点 strong 强壮，重要 emphasis 强调 order 顺序 ordered 有顺序的 unordered 无顺序的 description 描述 term 术语 data 数据 quote 引用 block 块 inline 行内，内联 break 打断 推荐书籍《网道HTML教程》阮一峰的网络文档。推荐工具 JSbin 代码沙盒 测速代码的时候可以用。 HTML起手式123456789101112&lt;!DOCTYPE html&gt; //文档类型&lt;html lang=&quot;zh-CN&quot;&gt; //html标签&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; 》//文件的字符编码 &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,inital-scale=1.0&quot;&gt; //防止页面缩放 &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;/&gt; //告诉IE用最新的内核渲染页面 &lt;title&gt;Document&lt;/title&gt; //网页的标题&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 章节标签标题 h1~h6章节 section文章 article段落 p头部 header脚部 footer主要内容 main划分 div其实我觉得html标签就是根据标签的语义，在网页合理使用。让网页看上去是有结构的。 全局属性(所有标签都有的属性)class 类contenteditable 可以让该标签内的内容可以被编辑hidden 让一个东西看不到idstyle 样式tabindex 用「Tab」键可以在页面里面切换title鼠标浮动到元素上，可以显示title的内容 内容标签ol + li 有序列表ul + li 无序列表dl + dt + dd 描述列表dl = description list 描述列dt = description term 描述的术语dd = description data 描述的数据 pre 在pre里面的段落，可以保留标签内的格式code 里面可以写代码hr 分割线a 超链接标签em 强调 语气strong 强调 本质quote 引用标签 属于内联标签blockquote 引用标签 属于块级标签 资料参考：饥人谷","link":"/2020/09/22/HTML%E6%A0%87%E7%AD%BE/"},{"title":"HTML重点标签","text":"英语小课堂 英文 翻译 英文 翻译 英文 翻译 hyper 超级 target 目标 refer+ence 引用 frame 边框 erroe 错误 blank 空白 parent 父母之一 self 自己 load 加载 canvas 画布 前端开发打开HTML文件的正确姿势1 http-server -c-1 //-c缓存 缓存等于-1 就是不要缓存2 parcel xxxx.html a标签 作用：跳转到一个页面，跳转内部锚点，发邮件打电话 常用属性 1 herf 网址 路径 文件名配合download使用，这样a标签就变成了一个下载按钮，可以下载该文件。 伪协议: javascript:; mailto:邮箱 tel:电话号码javasctipt:; 里面如果写js代码，就可以执行js命令，如果什么都不写，就会变成一个点击以后没有任何动作的a标签。 idhref=”#xxx” 可以跳转到本页面，id为xxx的元素上。 2 target _blank 在空白的页面上打开。 _self 在当前页面打开，是默认值 _top 配合iframe理解,当一个页面里面，有一个iframe，iframe里面的a标签，target是_top的话，就在最上层页面打开。 _parent 配合iframe理解，当一个页面里面，有一个iframe，iframe里面的a标签，target是_parent的话，就在上一层的页面打开 xxx 在一个新的窗口打开并且把该页面命名为xxx，以后再新打开的窗口都会在xxx打开。利用一个窗口打开新的页面。例子：youku防止用户不看广告，所有新开的视频都在一个页面上打开。 iframe 便签的name ，可以在不同的iframe打开。 3 download 只写download，就会把整个网页都下载下来。 download='xxxx' 就是下载的文件命名为xxx iframe标签 作用：在网页内内嵌一个窗口。（已经很少使用，只有很多古老的网站还在使用） table标签 table里面要包含 thead tbody tfoot 123456789101112131415 &lt;table&gt; &lt;thead&gt; &lt;tr&gt; //table raw 表格里的一行 &lt;th&gt;英文&lt;/th&gt; //table head 表头 &lt;th&gt;翻译&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td&gt;table&lt;/td&gt; //table data 表格里的数据 &lt;td&gt;表格&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;tfoot&gt;&lt;/tfoot&gt; &lt;/table&gt; img标签 src=”图片的地址也可以是相对路径” alt=”xxxx” 图片下载失败的时候，提示用户alt里面的内容 width，height 单独写一个，图片会自适应 max-width:100% 图片会根据屏幕大小自适应 form标签 作用 :表示文档中的一个区域，此区域包含交互控件，用于向 Web 服务器提交信息。 属性 action:xxx 请求一个页面 method:get/post 控制请求是get还是post autocomplete:on/off 可以自动建议之前输入过的用户名 target:xxxx 提交到那个页面，该页面更新form标签里面必须有一个type=submit的东西，不然form就不会提交。 input标签 作用 :包含在form标签里面，以便接受来自用户的数据; 可以使用各种类型的输入数据和控件小部件属性太多，具体参考MDN input 参考资料:饥人谷","link":"/2020/09/24/HTML%E9%87%8D%E7%82%B9%E6%A0%87%E7%AD%BE/"}],"tags":[{"name":"命令行","slug":"命令行","link":"/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"}],"categories":[]}